defaults: &defaults
  working_directory: ~/workspace
  docker:
    - image: circleci/node:latest

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm install
          command: npm install
      - run:
          name: nwb build
          command: npm run build
      - run:
          name: copy ci config
          command: cp -r .circleci/ ./styleguide/.circleci/
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
            - package-lock.json
      - persist_to_workspace:
          root: ~/workspace
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: git config
          command: git config --global user.email "deploy@circleci.com" && git config --global user.name "Circle CI"
      - run:
          name: ssh alias override key verification
          command: alias ssh='ssh -o StrictHostKeyChecking=no'  && mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: npm run deploy
          command: npm run deploy

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/workspace/.npmrc
      - run:
          name: git config
          command: git config --global user.email "deploy@circleci.com" && git config --global user.name "Circle CI"
      - run:
          name: ssh alias override key verification
          command: alias ssh='ssh -o StrictHostKeyChecking=no'  && mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: patch
          command: npm version patch
      - run:
          name: Publish package
          command: npm publish
      - run:
          name: git push
          command: git push

workflows:
  version: 2
  build_deploy_and_publish:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - publish:
          requires:
            - deploy
          filters:
            branches:
              only: master
